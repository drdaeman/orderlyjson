object {
  string foo;
  string "foo2";
  string "this is a property name with spaces";

  string name?;
  string "name2"?;

  string town <state>;
  string "town2" <state,zip>;

  string mood [ "happy", "sad", "meh" ];
  integer secretOfLife [ 7, 42 ];

  string "mood2" [ "happy", "sad", "meh" ] = "happy"; # optimistically default to "happy"

  string{4,12} login;
  string{4,} "login2"; # login requires at least 4 chars
  string{,32} "name3"; # name may not be longer than 32 chars

  string "mood3" /^((happy)|(sad)|(meh))$/;

  number{0.02, 0.98} numNum;
  integer{0,10} rating;

  boolean iShouldStay;

  object {
      string foo;
      integer bar;
      number baz;
  } "obj1";

  array [
    number {0.00, 1.00}
  ] weights; # an array of floating point weights between 0 and 1.

  array {
      integer;
      string;
      number;
  } artificial;

  array { integer; }* intFollowedByWhatever;

  array { integer; } {0,10} myArrayOfSmallInts;

  object {
      string name;
      string title;
  }* employee;

  array { integer; string; }* myOpenTupleTypedArray;

  null likeAir;

  union {
      string [ "Sr.", "Jr.", "III" ];
      null;
  } suffix;

  any notes;

  union {
      string;
      number;
  } myUnion;

  integer{0,256} powerOfTwo[1,2,4,8,16,32,64,128,256] = 1;

  object {
    string beast;
    number normalTemperature;
  } temps [ { "beast": "canine", "normalTemperature": 101.2 },
      { "beast": "human", "normalTemperature": 98.6 } ]
    = { "beast": "canine", "normalTemperature": 101.2 };

}